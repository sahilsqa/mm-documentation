"use strict";(self.webpackChunkmm_docs=self.webpackChunkmm_docs||[]).push([[3273],{5083:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>T,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"technical/database-schema","title":"Database Schema","description":"This document provides a detailed overview of Mera Monitor\'s database schema, including table structures, relationships, and indexes. The database is designed to efficiently store and manage all system data.","source":"@site/docs/technical/database-schema.md","sourceDirName":"technical","slug":"/technical/database-schema","permalink":"/mm-documentation/docs/technical/database-schema","draft":false,"unlisted":false,"editUrl":"https://github.com/sahilsqa/mm-documentation/tree/main/docs/technical/database-schema.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"database-schema","title":"Database Schema","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/mm-documentation/docs/technical/api-reference"},"next":{"title":"System Architecture","permalink":"/mm-documentation/docs/technical/system-architecture"}}');var t=s(4848),a=s(8453);const r={id:"database-schema",title:"Database Schema",sidebar_position:2},d="Database Schema",l={},c=[{value:"Users Table",id:"users-table",level:2},{value:"Teams Table",id:"teams-table",level:2},{value:"Team Members Table",id:"team-members-table",level:2},{value:"Projects Table",id:"projects-table",level:2},{value:"Project Members Table",id:"project-members-table",level:2},{value:"Tasks Table",id:"tasks-table",level:2},{value:"Activities Table",id:"activities-table",level:2},{value:"Attendance Table",id:"attendance-table",level:2},{value:"Reports Table",id:"reports-table",level:2},{value:"Settings Table",id:"settings-table",level:2},{value:"Audit Logs Table",id:"audit-logs-table",level:2},{value:"Relationships",id:"relationships",level:2},{value:"One-to-Many Relationships",id:"one-to-many-relationships",level:3},{value:"Many-to-Many Relationships",id:"many-to-many-relationships",level:3},{value:"One-to-One Relationships",id:"one-to-one-relationships",level:3},{value:"Indexes",id:"indexes",level:2},{value:"Primary Indexes",id:"primary-indexes",level:3},{value:"Secondary Indexes",id:"secondary-indexes",level:3},{value:"Data Types",id:"data-types",level:2},{value:"Common Types",id:"common-types",level:3},{value:"Enums",id:"enums",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance",id:"performance",level:3},{value:"Data Integrity",id:"data-integrity",level:3},{value:"Security",id:"security",level:3},{value:"Maintenance",id:"maintenance",level:2},{value:"Regular Tasks",id:"regular-tasks",level:3},{value:"Monitoring",id:"monitoring",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"database-schema",children:"Database Schema"})}),"\n",(0,t.jsx)(n.p,{children:"This document provides a detailed overview of Mera Monitor's database schema, including table structures, relationships, and indexes. The database is designed to efficiently store and manage all system data."}),"\n",(0,t.jsx)(n.h2,{id:"users-table",children:"Users Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE users (\n    id UUID PRIMARY KEY,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    first_name VARCHAR(100),\n    last_name VARCHAR(100),\n    role VARCHAR(50) NOT NULL,\n    department VARCHAR(100),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    last_login_at TIMESTAMP WITH TIME ZONE,\n    is_active BOOLEAN DEFAULT true,\n    INDEX idx_email (email),\n    INDEX idx_role (role),\n    INDEX idx_department (department)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"teams-table",children:"Teams Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE teams (\n    id UUID PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    description TEXT,\n    department VARCHAR(100),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_department (department)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"team-members-table",children:"Team Members Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE team_members (\n    team_id UUID REFERENCES teams(id),\n    user_id UUID REFERENCES users(id),\n    role VARCHAR(50) NOT NULL,\n    joined_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (team_id, user_id),\n    INDEX idx_user_id (user_id)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"projects-table",children:"Projects Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE projects (\n    id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT,\n    status VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    created_by UUID REFERENCES users(id),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_status (status),\n    INDEX idx_dates (start_date, end_date)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"project-members-table",children:"Project Members Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE project_members (\n    project_id UUID REFERENCES projects(id),\n    user_id UUID REFERENCES users(id),\n    role VARCHAR(50) NOT NULL,\n    joined_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (project_id, user_id),\n    INDEX idx_user_id (user_id)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tasks-table",children:"Tasks Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE tasks (\n    id UUID PRIMARY KEY,\n    project_id UUID REFERENCES projects(id),\n    title VARCHAR(255) NOT NULL,\n    description TEXT,\n    status VARCHAR(50) NOT NULL,\n    priority VARCHAR(50) NOT NULL,\n    assigned_to UUID REFERENCES users(id),\n    created_by UUID REFERENCES users(id),\n    due_date DATE,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_project_id (project_id),\n    INDEX idx_status (status),\n    INDEX idx_assigned_to (assigned_to)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"activities-table",children:"Activities Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE activities (\n    id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(id),\n    type VARCHAR(50) NOT NULL,\n    name VARCHAR(255) NOT NULL,\n    start_time TIMESTAMP WITH TIME ZONE NOT NULL,\n    end_time TIMESTAMP WITH TIME ZONE,\n    duration INTEGER,\n    metadata JSONB,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_user_id (user_id),\n    INDEX idx_type (type),\n    INDEX idx_start_time (start_time)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"attendance-table",children:"Attendance Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE attendance (\n    id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(id),\n    date DATE NOT NULL,\n    clock_in TIMESTAMP WITH TIME ZONE,\n    clock_out TIMESTAMP WITH TIME ZONE,\n    status VARCHAR(50) NOT NULL,\n    notes TEXT,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE (user_id, date),\n    INDEX idx_user_id (user_id),\n    INDEX idx_date (date)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"reports-table",children:"Reports Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE reports (\n    id UUID PRIMARY KEY,\n    type VARCHAR(50) NOT NULL,\n    title VARCHAR(255) NOT NULL,\n    description TEXT,\n    parameters JSONB,\n    data JSONB,\n    created_by UUID REFERENCES users(id),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_type (type),\n    INDEX idx_created_by (created_by)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"settings-table",children:"Settings Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE settings (\n    id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(id),\n    category VARCHAR(50) NOT NULL,\n    key VARCHAR(100) NOT NULL,\n    value JSONB,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE (user_id, category, key),\n    INDEX idx_user_id (user_id),\n    INDEX idx_category (category)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"audit-logs-table",children:"Audit Logs Table"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE audit_logs (\n    id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(id),\n    action VARCHAR(50) NOT NULL,\n    entity_type VARCHAR(50) NOT NULL,\n    entity_id UUID NOT NULL,\n    changes JSONB,\n    ip_address VARCHAR(45),\n    user_agent TEXT,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_user_id (user_id),\n    INDEX idx_action (action),\n    INDEX idx_entity (entity_type, entity_id)\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"relationships",children:"Relationships"}),"\n",(0,t.jsx)(n.h3,{id:"one-to-many-relationships",children:"One-to-Many Relationships"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"User -> Activities"}),"\n",(0,t.jsx)(n.li,{children:"User -> Attendance"}),"\n",(0,t.jsx)(n.li,{children:"User -> Reports"}),"\n",(0,t.jsx)(n.li,{children:"Project -> Tasks"}),"\n",(0,t.jsx)(n.li,{children:"Team -> Team Members"}),"\n",(0,t.jsx)(n.li,{children:"Project -> Project Members"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"many-to-many-relationships",children:"Many-to-Many Relationships"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Users <-> Teams (through team_members)"}),"\n",(0,t.jsx)(n.li,{children:"Users <-> Projects (through project_members)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"one-to-one-relationships",children:"One-to-One Relationships"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"User -> Settings (per category)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"indexes",children:"Indexes"}),"\n",(0,t.jsx)(n.h3,{id:"primary-indexes",children:"Primary Indexes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All tables have UUID primary keys"}),"\n",(0,t.jsx)(n.li,{children:"Composite primary keys for junction tables"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"secondary-indexes",children:"Secondary Indexes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Email lookup for users"}),"\n",(0,t.jsx)(n.li,{children:"Status filtering for projects and tasks"}),"\n",(0,t.jsx)(n.li,{children:"Date-based queries for activities and attendance"}),"\n",(0,t.jsx)(n.li,{children:"User-based queries across tables"}),"\n",(0,t.jsx)(n.li,{children:"Category-based settings lookup"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"data-types",children:"Data Types"}),"\n",(0,t.jsx)(n.h3,{id:"common-types",children:"Common Types"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"UUID for IDs"}),"\n",(0,t.jsx)(n.li,{children:"VARCHAR for strings"}),"\n",(0,t.jsx)(n.li,{children:"TEXT for long text"}),"\n",(0,t.jsx)(n.li,{children:"TIMESTAMP WITH TIME ZONE for timestamps"}),"\n",(0,t.jsx)(n.li,{children:"JSONB for flexible data"}),"\n",(0,t.jsx)(n.li,{children:"BOOLEAN for flags"}),"\n",(0,t.jsx)(n.li,{children:"INTEGER for durations"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"enums",children:"Enums"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Status: active, completed, archived"}),"\n",(0,t.jsx)(n.li,{children:"Priority: low, medium, high, urgent"}),"\n",(0,t.jsx)(n.li,{children:"Role: admin, manager, user, guest"}),"\n",(0,t.jsx)(n.li,{children:"Activity Type: app, website, document"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Indexing"}),": Appropriate indexes for common queries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Partitioning"}),": Large tables partitioned by date"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Archiving"}),": Old data archived to separate tables"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching"}),": Frequently accessed data cached"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Query Optimization"}),": Optimized query patterns"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"data-integrity",children:"Data Integrity"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Foreign Keys"}),": Enforced referential integrity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Constraints"}),": Data validation constraints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Triggers"}),": Automated data updates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Audit Trail"}),": Comprehensive change tracking"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Backup Strategy"}),": Regular data backups"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Access Control"}),": Role-based access"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Encryption"}),": Sensitive data encrypted"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Audit Logging"}),": All changes logged"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input Validation"}),": Strict input validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SQL Injection Prevention"}),": Parameterized queries"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"maintenance",children:"Maintenance"}),"\n",(0,t.jsx)(n.h3,{id:"regular-tasks",children:"Regular Tasks"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Index Maintenance"}),": Regular index optimization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vacuum"}),": Regular table vacuuming"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistics Update"}),": Update query statistics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Backup Verification"}),": Verify backup integrity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Monitoring"}),": Monitor query performance"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Table Sizes"}),": Monitor table growth"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Index Usage"}),": Track index effectiveness"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Query Performance"}),": Monitor slow queries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Connection Pool"}),": Monitor connections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Disk Usage"}),": Monitor storage usage"]}),"\n"]})]})}function T(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);