"use strict";(self.webpackChunkmm_docs=self.webpackChunkmm_docs||[]).push([[592],{3334:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/add-department-e1eb787eac1967e7e59acbdbe89be46c.png"},6500:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"technical-reference/tech-ref-data-flow","title":"Data to Server Flow","description":"This outlines the typical process the Mera Monitor desktop application uses to process collected user activity data and upload it to the central server.","source":"@site/docs/technical-reference/data-flow.md","sourceDirName":"technical-reference","slug":"/technical-reference/tech-ref-data-flow","permalink":"/mm-documentation/docs/technical-reference/tech-ref-data-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/sahilsqa/mm-documentation/tree/main/docs/technical-reference/data-flow.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"tech-ref-data-flow","title":"Data to Server Flow","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Websites & Applications Report","permalink":"/mm-documentation/docs/reports/reports-web-apps"},"next":{"title":"Login & Data Capture Flow","permalink":"/mm-documentation/docs/technical-reference/tech-ref-login-flow"}}');var n=i(4848),a=i(8453);const r={id:"tech-ref-data-flow",title:"Data to Server Flow",sidebar_position:1},o="Desktop App: Data to Server Flow",c={},l=[{value:"Steps",id:"steps",level:2},{value:"Key Data Tables (Conceptual)",id:"key-data-tables-conceptual",level:2}];function d(e){const t={admonition:"admonition",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"desktop-app-data-to-server-flow",children:"Desktop App: Data to Server Flow"})}),"\n",(0,n.jsx)(t.p,{children:"This outlines the typical process the Mera Monitor desktop application uses to process collected user activity data and upload it to the central server."}),"\n",(0,n.jsx)(t.h2,{id:"steps",children:"Steps"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"API Token Validation:"})," Ensure the application has a valid token to communicate with the server."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Daily Table Check:"})," Identify relevant daily data tables (often SQLite) containing raw captured data."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"User Data Retrieval:"})," Fetch user-specific activity data recorded by the desktop agent."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Screen Activity Processing:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Aggregate raw screen activity records, grouping them by application name, window title, and URL (if applicable)."}),"\n",(0,n.jsx)(t.li,{children:"Calculate derived metrics like away time, first/last activity timestamps within a timeframe."}),"\n",(0,n.jsx)(t.li,{children:"Apply productivity classifications (Productive/Unproductive) based on defined rules."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Keystroke/Mouse Data Processing:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Aggregate keyboard stroke counts and mouse click/movement data."}),"\n",(0,n.jsx)(t.li,{children:"Identify periods of idle time based on lack of input."}),"\n",(0,n.jsx)(t.li,{children:"Update relevant activity and idle time tables."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Iterative Processing:"})," Repeat the processing steps for all monitored users managed by the application instance."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Data Upload:"})," Securely transmit the processed data to the main server database."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Cleanup:"})," Optionally, clean up or archive raw data locally after successful processing and upload to manage disk space."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"key-data-tables-conceptual",children:"Key Data Tables (Conceptual)"}),"\n",(0,n.jsx)(t.p,{children:"The process often involves interacting with several local and server-side tables:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Local Daily Tables:"})," Store raw, timestamped activity logs (e.g., application focus changes, URLs visited, keyboard/mouse events)."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"User Screen Activity Table:"})," Stores aggregated and processed screen time per application/URL."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"User Daily Activity Table:"})," Contains daily summaries of total active, productive, unproductive, and idle time."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"User Productivity Table:"})," Maps applications/websites to their productivity status."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"User Key/Mouse Activity Tables:"})," Stores aggregated input activity counts."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"User Daily Idle Activity Table:"})," Records detected periods of user idle time."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Screenshot: Data to Server Flow Diagram",src:i(3334).A+"",width:"1024",height:"1980"})}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"info",children:(0,n.jsx)(t.p,{children:"Data processing might occur at set intervals or triggered by specific events (e.g., user logout, system shutdown) to ensure timely updates on the server."})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var s=i(6540);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);