"use strict";(self.webpackChunkmm_docs=self.webpackChunkmm_docs||[]).push([[9648],{3334:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/add-department-e1eb787eac1967e7e59acbdbe89be46c.png"},8367:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"technical-reference/tech-ref-login-flow","title":"Login & Data Capture Flow","description":"This describes the process the Mera Monitor desktop application follows for user login and subsequent data collection.","source":"@site/docs/technical-reference/login-flow.md","sourceDirName":"technical-reference","slug":"/technical-reference/tech-ref-login-flow","permalink":"/mm-documentation/docs/technical-reference/tech-ref-login-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/sahilsqa/mm-documentation/tree/main/docs/technical-reference/login-flow.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"tech-ref-login-flow","title":"Login & Data Capture Flow","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Data to Server Flow","permalink":"/mm-documentation/docs/technical-reference/tech-ref-data-flow"}}');var t=s(4848),r=s(8453);const o={id:"tech-ref-login-flow",title:"Login & Data Capture Flow",sidebar_position:2},a="Desktop App: Login & Data Capture Flow",l={},c=[{value:"Steps",id:"steps",level:2},{value:"Triggers &amp; Actions",id:"triggers--actions",level:2}];function d(e){const n={admonition:"admonition",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"desktop-app-login--data-capture-flow",children:"Desktop App: Login & Data Capture Flow"})}),"\n",(0,t.jsx)(n.p,{children:"This describes the process the Mera Monitor desktop application follows for user login and subsequent data collection."}),"\n",(0,t.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Authentication:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Checks for existing sessions/credentials stored locally (e.g., in SQLite DB)."}),"\n",(0,t.jsx)(n.li,{children:"If no valid local session, prompts the user for login credentials (username/password)."}),"\n",(0,t.jsx)(n.li,{children:"Validates entered credentials against the central server."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration & Initialization:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Validates the API token received from the server upon successful login."}),"\n",(0,t.jsx)(n.li,{children:"Loads user-specific configuration settings (monitoring rules, privacy settings) from the server or local cache."}),"\n",(0,t.jsx)(n.li,{children:"Initializes necessary components like activity tracking timers, screenshot capture mechanisms, etc."}),"\n",(0,t.jsx)(n.li,{children:"Loads any relevant project or task lists associated with the user."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Collection (Continuous):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Monitors user activity based on configured intervals and triggers:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Screen Activity:"})," Captures application focus changes, window titles, URLs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Screenshots:"})," Takes screenshots at the configured interval."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keyboard/Mouse Events:"})," Tracks input activity (counts, not specific keys) to measure activity levels and detect idle time."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Log Intervals:"})," Periodically saves captured data locally."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Storage (Local):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Temporarily stores data in memory for immediate processing."}),"\n",(0,t.jsx)(n.li,{children:"Persists raw and aggregated data to a local database (e.g., SQLite)."}),"\n",(0,t.jsx)(n.li,{children:"Saves captured screenshots to a designated local folder."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Upload (Periodic):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"At configured intervals or based on triggers (e.g., network availability), uploads processed data from the local SQLite DB to the main server database."}),"\n",(0,t.jsx)(n.li,{children:"Uploads saved screenshots from the local folder to the configured cloud storage (if enabled)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stopping Activities (e.g., Logout/Shutdown):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gracefully stops all monitoring timers and activity listeners."}),"\n",(0,t.jsx)(n.li,{children:"Ensures any remaining locally stored data is uploaded to the server/cloud before the application closes to prevent data loss."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"triggers--actions",children:"Triggers & Actions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Login:"})," Initiates authentication and configuration loading."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timers:"})," Trigger periodic actions like screenshot capture, data logging, and data upload."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Activity:"})," Changes in screen focus, keyboard/mouse input trigger data capture."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Storage Events:"})," Writing data to memory, SQLite, and local folders."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Upload Events:"})," Transmitting data to the main database and cloud storage."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Screenshot: Login &amp; Data Capture Flow Diagram",src:s(3334).A+"",width:"1024",height:"1980"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The application is designed to ensure all captured data is securely uploaded before shutdown whenever possible."})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);